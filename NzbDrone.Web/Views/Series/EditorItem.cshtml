@model NzbDrone.Web.Models.SeriesModel
@using NzbDrone.Core.Model
@using NzbDrone.Core.Repository.Quality
@using NzbDrone.Web.Helpers

@{
    Layout = null;
}

@*SeriesId, Title, Quality, Monitored, Use Season Folder, Root Directory/Path*, Backlog Toggle*@

<tr class="seriesEditRow" data-status="@Model.Status">
    @using (Html.BeginCollectionItem("series"))
    {
        var idClean = ViewData.TemplateInfo.HtmlFieldPrefix.Replace('[', '_').Replace(']', '_');
    
        @Html.HiddenFor(m => m.SeriesId)
        <td>@Html.CheckBox("editToggle", false, new {@class = "editToggle"})</td>
        <td>@Model.Title</td>
        <td>@Html.DropDownListFor(m => m.QualityProfileId, new SelectList((List<QualityProfile>)ViewData["QualityProfiles"], "QualityProfileId", "Name", Model.QualityProfileId), new { @class = "quality" })</td>
        <td class="checkboxColumn">@Html.CheckBoxFor(m => m.Monitored, new {@class = "seriesCheckbox monitored"})</td>
        <td class="checkboxColumn">@Html.CheckBoxFor(m => m.SeasonFolder, new {@class = "seriesCheckbox seasonFolder"})</td>
        <td>@Html.DropDownListFor(m => m.BacklogSetting, new SelectList((List<KeyValuePair<int, string>>)ViewData["BacklogSettingTypes"], "Key", "Value", (int)Model.BacklogSetting), new { @class = "backlogSetting" })</td>
        <td>@Html.TextBoxFor(m => m.CustomStartDate, new { type = "date", @class = "start-date jQuery-datepicker" })</td>
        <td>@Html.TextBoxFor(m => m.Path, new { @class = "path" })</td>
        <td>
            @if (Model.Status == "Ended")
            {
                <i class="icon-play" title="Ended"></i>
            }
            
            else
            {
                <i class="icon-play" title="Continuing"></i>
            }
        </td>
    }
</tr>